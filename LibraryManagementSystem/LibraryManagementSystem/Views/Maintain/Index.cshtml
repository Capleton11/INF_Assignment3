@model Tuple<IEnumerable<LibraryManagementSystem.Models.type>, IEnumerable<LibraryManagementSystem.Models.author>, IEnumerable<LibraryManagementSystem.Models.borrow>>

@{
    ViewBag.Title = "Maintain";
    var totalPagesTypes = (int)Math.Ceiling((double)ViewBag.TotalTypes / ViewBag.PageSize);
    var totalPagesAuthors = (int)Math.Ceiling((double)ViewBag.TotalAuthors / ViewBag.PageSize);
    var totalPagesBorrows = (int)Math.Ceiling((double)ViewBag.TotalBorrows / ViewBag.PageSize);
}

<h2 class="text-center">Maintain Records</h2>

<div class="container">
    <div class="row">
        <!-- Types Section -->
        <div class="col-md-6">
            <h3>Types</h3>
            <button type="button" class="btn btn-success mb-3" data-toggle="modal" data-target="#createTypeModal">Create New Type</button>
            <table class="table table-bordered table-striped">
                <thead class="thead-light">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Item1.First().name)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Item1 != null && Model.Item1.Any())
                    {
                        foreach (var type in Model.Item1)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => type.name)</td>
                                <td>
                                    <button class="btn btn-sm btn-warning" data-toggle="modal" data-target="#editTypeModal-@type.typeId">Edit</button>
                                    <button class="btn btn-sm btn-danger" data-toggle="modal" data-target="#deleteTypeModal-@type.typeId">Delete</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="2">No types available.</td>
                        </tr>
                    }
                </tbody>
            </table>

            @foreach (var type in Model.Item1)
            {
                <!-- Edit Modal for Type -->
                <div class="modal fade" id="editTypeModal-@type.typeId" tabindex="-1" role="dialog" aria-labelledby="editTypeModalLabel-@type.typeId" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="editTypeModalLabel-@type.typeId">Edit Type</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                @using (Html.BeginForm("TypesEdit", "Maintain", FormMethod.Post))
                                {
                                    @Html.HiddenFor(m => type.typeId)
                                    <div class="form-group">
                                        @Html.LabelFor(m => type.name)
                                        @Html.TextBoxFor(m => type.name, new { @class = "form-control" })
                                    </div>
                                    <button type="submit" class="btn btn-primary">Save changes</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
            @foreach (var type in Model.Item1)
            {
                <!-- Delete Modal for Type -->
                <div class="modal fade" id="deleteTypeModal-@type.typeId" tabindex="-1" role="dialog" aria-labelledby="deleteTypeModalLabel-@type.typeId" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="deleteTypeModalLabel-@type.typeId">Delete Confirmation</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to delete this type?
                            </div>
                            <div class="modal-footer">
                                @using (Html.BeginForm("TypesDelete", "Maintain", FormMethod.Post))
                                {
                                    @Html.HiddenFor(m => type.typeId)
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-danger">Delete</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Pagination for Types -->
            <nav aria-label="Types pagination">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= totalPagesTypes; i++)
                    {
                        if (i == ViewBag.CurrentPage)
                        {
                            <li class="page-item active"><a class="page-link" href="#">@i</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { pageType = i })">@i</a></li>
                        }
                    }
                </ul>
            </nav>
        </div>

        <!-- Authors Section -->
        <div class="col-md-6">
            <h3>Authors</h3>
            <button type="button" class="btn btn-success mb-3" data-toggle="modal" data-target="#createAuthorModal">Create New Author</button>
            <table class="table table-bordered table-striped">
                <thead class="thead-light">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Item2.First().name)</th>
                        <th>@Html.DisplayNameFor(model => model.Item2.First().surname)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var author in Model.Item2)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => author.name)</td>
                            <td>@Html.DisplayFor(modelItem => author.surname)</td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", "authors", new { id = author.authorId }, new { @class = "btn btn-sm btn-warning" }) |
                                @Html.ActionLink("Delete", "Delete", "authors", new { id = author.authorId }, new { @class = "btn btn-sm btn-danger" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination for Authors -->
            <nav aria-label="Authors pagination">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= totalPagesAuthors; i++)
                    {
                        if (i == ViewBag.CurrentPage)
                        {
                            <li class="page-item active"><a class="page-link" href="#">@i</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { pageAuthor = i })">@i</a></li>
                        }
                    }
                </ul>
            </nav>
        </div>
    </div>

    <!-- Borrows Section - Full Width -->
    <div class="row mt-4">
        <div class="col-md-12">
            <h3>Borrows</h3>
            <button type="button" class="btn btn-success mb-3" data-toggle="modal" data-target="#createBorrowModal">Create New Borrow</button>
            <table class="table table-bordered table-striped">
                <thead class="thead-light">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Item3.First().takenDate)</th>
                        <th>@Html.DisplayNameFor(model => model.Item3.First().broughtDate)</th>
                        <th>@Html.DisplayNameFor(model => model.Item3.First().book.name)</th>
                        <th>@Html.DisplayNameFor(model => model.Item3.First().student.name)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var borrow in Model.Item3)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => borrow.takenDate)</td>
                            <td>@Html.DisplayFor(modelItem => borrow.broughtDate)</td>
                            <td>@Html.DisplayFor(modelItem => borrow.book.name)</td>
                            <td>@Html.DisplayFor(modelItem => borrow.student.name)</td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", "borrows", new { id = borrow.borrowId }, new { @class = "btn btn-sm btn-warning" }) |
                                @Html.ActionLink("Delete", "Delete", "borrows", new { id = borrow.borrowId }, new { @class = "btn btn-sm btn-danger" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination for Borrows -->
            <nav aria-label="Borrows pagination">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= 20; i++)
                    {
                        if (i == ViewBag.CurrentPage)
                        {
                            <li class="page-item active"><a class="page-link" href="#">@i</a></li>
                        }
                        else 
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { pageBorrow = i })">@i</a></li>
                        }
                    }
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1 })" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>
<!-- Modals for Create Forms: Type, Author, Borrow -->
<!-- Add Type, Author, and Borrow creation modals as per your original code -->
<!-- Create Modals -->
<!-- Create Type Modal -->
<div class="modal fade" id="createTypeModal" tabindex="-1" role="dialog" aria-labelledby="createTypeModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createTypeModalLabel">Create New Type</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("TypesCreate", "Maintain", FormMethod.Post, new { id = "createTypeForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.Label("Type Name")
                        @Html.TextBox("name", null, new { @class = "form-control", placeholder = "Type Name" })
                    </div>
                    <button type="submit" class="btn btn-primary">Create</button>
                }
            </div>
        </div>
    </div>
</div>

<!-- Create Author Modal -->
<div class="modal fade" id="createAuthorModal" tabindex="-1" role="dialog" aria-labelledby="createAuthorModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createAuthorModalLabel">Create New Author</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AuthorsCreate", "Maintain", FormMethod.Post, new { id = "createAuthorForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.Label("Author Name")
                        @Html.TextBox("name", null, new { @class = "form-control", placeholder = "Author Name" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Author Surname")
                        @Html.TextBox("surname", null, new { @class = "form-control", placeholder = "Author Surname" })
                    </div>
                    <button type="submit" class="btn btn-primary">Create</button>
                }
            </div>
        </div>
    </div>
</div>

<!-- Create Borrow Modal -->
<div class="modal fade" id="createBorrowModal" tabindex="-1" role="dialog" aria-labelledby="createBorrowModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createBorrowModalLabel">Create New Borrow</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("BorrowsCreate", "Maintain", FormMethod.Post, new { id = "createBorrowForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.Label("Taken Date")
                        @Html.TextBox("takenDate", null, new { @class = "form-control", placeholder = "Taken Date", type = "date" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Brought Date")
                        @Html.TextBox("broughtDate", null, new { @class = "form-control", placeholder = "Brought Date", type = "date" })
                    </div>

                    <button type="submit" class="btn btn-primary">Create</button>
                }
            </div>
        </div>
    </div>
</div>